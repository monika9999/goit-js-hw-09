{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,QAChCC,EAAUF,SAASC,cAAc,uBACjCE,EAASH,SAASC,cAAc,sBAChCG,EAAWJ,SAASC,cAAc,wBAExC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbR,EAAOe,iBAAiB,SAASC,IAC/BA,EAAMC,iBACN,IAAIC,EAAQC,SAAShB,EAAQiB,OAC7B,IAAK,IAAIC,EAAI,EAAGA,GAAKhB,EAASe,MAAOC,IACnCf,EAAce,EAAGH,GACdI,MAAK,EAACf,SAAEA,EAAQC,MAAEA,MACjBe,EAAAzB,GAAS0B,OAAOC,QAAQ,qBAAqBlB,QAAeC,MAAU,IAEvEkB,OAAM,EAACnB,SAAEA,EAAQC,MAAEA,MAClBe,EAAAzB,GAAS0B,OAAOG,QAAQ,oBAAoBpB,QAAeC,MAAU,IAEzEU,GAASC,SAASf,EAAOgB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('form');\nconst deleyEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nformEl.addEventListener('click', event => {\n  event.preventDefault();\n  let delay = parseInt(deleyEl.value);\n  for (let i = 1; i <= amountEl.value; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += parseInt(stepEl.value);\n  }\n});"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$deleyEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","parseInt","value","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.2ae2d493.js.map"}